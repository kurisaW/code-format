name: PR Format Notify

on:
  pull_request:
    types: [opened, synchronize, edited]

jobs:
  notify-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR info
        id: prinfo
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            // Only notify for PRs from forks
            if (pr.head.repo.full_name === pr.base.repo.full_name) {
              core.setOutput("isFork", "false");
              return;
            }
            core.setOutput("isFork", "true");
            core.setOutput("prNumber", pr.number);
            core.setOutput("forkRepo", pr.head.repo.full_name);
            core.setOutput("branch", pr.head.ref);

      - name: Get exclude from PR comments (if any)
        id: exclude
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.prinfo.outputs.prNumber }};
            // Get all comments on the PR
            const comments = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: prNumber,
            });
            let exclude = "";
            for (const comment of comments.data) {
              const match = comment.body.match(/\/run-astyle-format\s+exclude=([^\s]+)/);
              if (match) {
                exclude = match[1];
                break;
              }
            }
            core.setOutput("exclude", exclude);

      - name: Prepare notification comment
        id: content
        run: |
          FORK_REPO="${{ steps.prinfo.outputs.forkRepo }}"
          BRANCH="${{ steps.prinfo.outputs.branch }}"
          EXCLUDE="${{ steps.exclude.outputs.exclude }}"
          COMMENT="⚠️ 本PR来自 fork 仓库（${FORK_REPO}），请在你的仓库 Actions 页面点击运行格式化工作流，格式化完成后请将格式化 commit push 到分支 \`${BRANCH}\`。
          最新格式化流程：[点击跳转](https://github.com/${FORK_REPO}/actions)"
                    if [ -n "$EXCLUDE" ]; then
                      COMMENT="$COMMENT

          **排除项**: \`${EXCLUDE}\`"
                    fi
                    # 使用 printf 和 heredoc 防止格式错乱
                    {
                      echo "comment<<EOF"
                      printf "%s\n" "$COMMENT"
                      echo "EOF"
                    } >> $GITHUB_OUTPUT

      - name: Find existing notification comment
        id: find_comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.prinfo.outputs.prNumber }};
            const comments = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: prNumber,
            });
            // Find the most recent notification comment (starts with ⚠️)
            let notifyComment = comments.data.find(c => c.body.startsWith("⚠️ 本PR来自 fork 仓库"));
            core.setOutput("commentId", notifyComment ? notifyComment.id : "");

      - name: Create or update notification comment
        if: steps.prinfo.outputs.isFork == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.prinfo.outputs.prNumber }};
            const commentId = ${{ steps.find_comment.outputs.commentId }};
            const body = process.env.COMMENT;
            if (commentId) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: commentId,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body,
              });
            }
        env:
          COMMENT: ${{ steps.content.outputs.comment }}