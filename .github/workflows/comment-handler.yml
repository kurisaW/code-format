name: Comment Handler
on:
  issue_comment:
    types: [created, edited]

permissions:
  pull-requests: write

jobs:
  handle-format-comment:
    if: |
      github.repository == 'kurisaW/code-format' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/run-astyle-format')
    runs-on: ubuntu-latest
    
    steps:
      - name: Check permissions
        id: check-permissions
        run: |
          COMMENT_AUTHOR="${{ github.event.comment.user.login }}"
          PR_AUTHOR="${{ github.event.issue.user.login }}"
          REPO_OWNER="${{ github.repository_owner }}"
          
          if [ "$COMMENT_AUTHOR" = "$PR_AUTHOR" ] || [ "$COMMENT_AUTHOR" = "$REPO_OWNER" ]; then
            echo "has_permission=true" >> $GITHUB_OUTPUT
          else
            echo "has_permission=false" >> $GITHUB_OUTPUT
            echo "User $COMMENT_AUTHOR is not authorized"
          fi

      - name: Parse and respond to comment
        if: steps.check-permissions.outputs.has_permission == 'true'
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          COMMENT_BODY="${{ github.event.comment.body }}"
          
          # 解析exclude参数
          if [[ "$COMMENT_BODY" =~ exclude=([^[:space:]]*) ]]; then
            EXCLUDE_PATTERNS="${BASH_REMATCH[1]}"
            EXCLUDE_PATTERNS=$(echo "$EXCLUDE_PATTERNS" | sed 's/[^a-zA-Z0-9,_.-].*$//')
          else
            EXCLUDE_PATTERNS=""
          fi
          
          # 回复确认消息
          RESPONSE="✅ 已收到格式化指令"
          if [ -n "$EXCLUDE_PATTERNS" ]; then
            RESPONSE="$RESPONSE，排除项: $EXCLUDE_PATTERNS"
          fi
          
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
            -d "{\"body\": \"$RESPONSE\"}"